[{"categories":["R"],"content":"\rIt is always interesting to go back to your older projects. You can spot, how is your coding style evolving, and how you, as a programmer, are improving. Recently, I had to go through the code of one of my first projects in R and boy, was it a mess. It was supposed to download Financial Statements of all the businesses in Slovakia for a certain year. It worked, barely. But trying to understand the code was a pain. No functions,\rrandom variable names, no documentation… There was even a public API, but for some reason (and I am sure, that at a time It was a “great” one), I have decided not to use it but to scrape web pages directly. So I have decided this is a great opportunity to see, how would I do things now, and finally do this code some justice and banish this abomination that I have once called code. Public API\rFirst of all, we have to take a look at a public API endpoints and data model. Its full documentation can be found here. From the data model, we are interested in accounting entities and financial statements.\rIt is also possible to see an expected output from the endpoints, which we will use for preparing our database tables.\r# Project structure This time, things should be done right, that’s why I have decided to create an R package. This is a first step, that will give this project an initial structure. This also gives developer bigger control over which packages are used, which functions we want to export, and a lot more. All these great features come at almost no cost, so there is no reason not to create an R package. If you haven’t created an R package before, Hadley has a great tutorial on how to do things right. In the previous project, data were saved as .csv files which were the manually concated. Now we want to have downloaded data stored reasonably. Because of the relational nature of the data, we will use the PostgreSQL database. \rPreparing database\rAfter you install your PostgreSQL database, we need to create tables, where we will store our data. All the tables can be created with the following script: CREATE TABLE financial_report_for_financial_statement (\rid serial PRIMARY KEY,\rid_financial_statement VARCHAR (10),\rid_financial_report VARCHAR (10)\r);\rCREATE TABLE financial_report_title (\rid serial PRIMARY KEY,\rid_financial_report VARCHAR (10),\rnazovUctovnejJednotky VARCHAR (500),\rico VARCHAR (8),\rdic VARCHAR (10), adresa VARCHAR (500),\rskNace VARCHAR (100),\rtypZavierky VARCHAR (30),\robdobieOd DATE,\robdobieDo DATE,\rpredchadzajuceObdobieOd DATE,\rpredchadzajuceObdobieDo DATE,\rdatumSchvalenia DATE,\rdatumZostavenia DATE,\roznacenieObchodnehoRegistra VARCHAR (100),\rtype VARCHAR (3)\r);\rCREATE TABLE financial_report_base (\rid serial PRIMARY KEY,\rid_financial_report VARCHAR (10),\rpristupnostDat VARCHAR (20),\rdatumPoslednejUpravy DATE,\rzdrojDat VARCHAR(20),\rkodDanovehoUradu VARCHAR(20),\ridSablony VARCHAR(20)\r);\rDO language 'plpgsql'\r$$\rDECLARE mujAkt text := 'CREATE TABLE financial_report_assets_muj(id serial PRIMARY KEY, id_financial_report varchar(10),'\r|| string_agg('V' || i::text || ' integer', ',') || ');'\rFROM generate_series(1,46) As i;\rDECLARE mujPas text := 'CREATE TABLE financial_report_lae_muj(id serial PRIMARY KEY, id_financial_report varchar(10),'\r|| string_agg('V' || i::text || ' integer', ',') || ');'\rFROM generate_series(1,44) As i;\rDECLARE mujZS text := 'CREATE TABLE financial_report_is_muj(id serial PRIMARY KEY, id_financial_report varchar(10),'\r|| string_agg('V' || i::text || ' integer', ',') || ');'\rFROM generate_series(1,76) As i;\rDECLARE podAkt text := 'CREATE TABLE financial_report_assets_pod(id serial PRIMARY KEY, id_financial_report varchar(10),'\r|| string_agg('V' || i::text || ' integer', ',') || ');'\rFROM generate_series(1,312) As i;\rDECLARE podPas text := 'CREATE TABLE financial_report_lae_pod(id serial PRIMARY KEY, id_financial_report varchar(10),'\r|| string_agg('V' || i::text || ' integer', ',') || ');'\rFROM generate_series(1,134) As i;\rDECLARE podZS text := 'CREATE TABLE financial_r","date":"2020-06-01","objectID":"/2020-06-01-scraping-financial-statements-of-slovak-financial-entities/:0:0","tags":["R","Web Scraping"],"title":"Scraping financial statements of Slovak financial entities","uri":"/2020-06-01-scraping-financial-statements-of-slovak-financial-entities/"},{"categories":["R"],"content":"\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. You can embed an R code chunk like this: summary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u003c- lm(dist ~ speed, data = cars)\rfit\r## ## Call:\r## lm(formula = dist ~ speed, data = cars)\r## ## Coefficients:\r## (Intercept) speed ## -17.579 3.932\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example: par(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),\rcol = c('#0292D8', '#F7EA39', '#C4B632'),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":"2015-07-23","objectID":"/2015-07-23-r-rmarkdown/:0:0","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","uri":"/2015-07-23-r-rmarkdown/"}]